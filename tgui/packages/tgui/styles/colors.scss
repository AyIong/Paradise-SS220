/**
 * Copyright (c) 2020 Aleksej Komarov
 * SPDX-License-Identifier: MIT
 */

@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';

// Background and foreground color lightness ratios
$bg-lightness: -15% !default;
$fg-lightness: 10% !default;

@function bg($color) {
  @return color.scale($color, $lightness: $bg-lightness);
}

@function fg($color) {
  @return color.scale($color, $lightness: $fg-lightness);
}

/* Background colors */
$color-bg: hsl(0, 0%, 14.5%) !default;
$color-bg-darken: color.adjust($color-bg, $lightness: -10%) !default;
$color-fg: color.adjust($color-bg, $lightness: 7.5%) !default;
$color-base: hsla(0, 0%, 0%, 0.33) !default;
/* Background gradient */
$color-bg-spread: 2% !default;
$color-bg-start: color.adjust($color-bg, $lightness: $color-bg-spread) !default;
$color-bg-end: color.adjust($color-bg, $lightness: -$color-bg-spread) !default;

/* Base colors */
$red: hsl(0, 70%, 50%) !default;
$orange: hsl(25, 90%, 50%) !default;
$yellow: hsl(50, 95%, 50%) !default;
$olive: hsl(70, 80%, 50%) !default;
$green: hsl(135, 70%, 40%) !default;
$teal: hsl(175, 100%, 35%) !default;
$blue: hsl(205, 75%, 45%) !default;
$violet: hsl(260, 60%, 50%) !default;
$purple: hsl(285, 60%, 50%) !default;
$pink: hsl(325, 70%, 55%) !default;
$brown: hsl(25, 45%, 45%) !default;
$grey: hsl(0, 0%, 45%) !default;
$label: hsl(215, 20%, 60%) !default;
$gold: hsl(40, 90%, 50%) !default;

/* State colors */
$good: hsl(95, 65%, 40%) !default;
$average: hsl(35, 90%, 50%) !default;
$bad: hsl(0, 70%, 50%) !default;
$black: hsl(0, 0%, 0%) !default;
$white: hsl(0, 0%, 100%) !default;

/* Elements colors */
$primary: hsl(210, 40%, 45%) !default;
$selected: bg($green) !default;
$disabled: fg($grey) !default;

/* Text colors */
$text-color: hsl(0, 0%, 100%) !default;
$text-color-translucent: rgba($text-color, 0.5) !default;

/* Border colors */
$border-color: hsla(0, 0%, 100%, 0.1) !default;
$border-color-input: hsla(210, 100%, 75%, 0.75) !default;
$border-color-disabled: $disabled !default;

/* Shadow color */
$shadow-color: rgba($black, 0.25) !default;

// Mappings of color names
$_gen_map: (
  'black': $black,
  'white': $white,
  'red': $red,
  'orange': $orange,
  'yellow': $yellow,
  'olive': $olive,
  'green': $green,
  'teal': $teal,
  'blue': $blue,
  'violet': $violet,
  'purple': $purple,
  'pink': $pink,
  'brown': $brown,
  'grey': $grey,
  'good': $good,
  'average': $average,
  'bad': $bad,
  'label': $label,
  'gold': $gold,
);

// Foreground color names for which to generate a color map
$fg-map-keys: map.keys($_gen_map) !default;

// Background color names for which to generate a color map
$bg-map-keys: map.keys($_gen_map) !default;

$fg-map: () !default;
@each $color-name in $fg-map-keys {
  $fg-map: map-merge(
    $fg-map,
    (
      $color-name: fg(map.get($_gen_map, $color-name)),
    )
  );
}

$bg-map: () !default;
@each $color-name in $bg-map-keys {
  $bg-map: map-merge(
    $bg-map,
    (
      $color-name: bg(map.get($_gen_map, $color-name)),
    )
  );
}
